#!/usr/bin/python
# -*- coding: utf-8 -*-

# Comment:              Cleanup exported XBMC nfo files (For movies using IMDB)
#
# Project:
# Started by		melvin laplanche <melvin.laplanche+dev@gmail.com>
# On			March 17 2012 at 04:32 PM
# Last updated by	melvin laplanche <melvin.laplanche+dev@gmail.com>
# On			March 17 2012 at 04:33 PM

import sys
import os
from tempfile import gettempdir
from fnmatch import fnmatch
import xml.etree.ElementTree as ET

def fetch_files(directory):
    out_list = []
    for dirname, dirnames, files in os.walk(directory):
        for subdir in dirnames:
            fetch_files(os.path.join(dirname, subdir))
        for filename in files:
            if fnmatch(filename, '*.nfo'):
                if not os.path.exists(os.path.join(gettempdir(), dirname)):
                    os.makedirs(os.path.join(gettempdir(), dirname));
                out_list.append(os.path.join(gettempdir(), dirname))
                parse_file(os.path.join(dirname, filename)
                           ,os.path.join(gettempdir(), dirname, filename))


# from http://effbot.org/zone/element-lib.htm#prettyprint
def indent(elem, level=0):
    i = "\n" + level*"  "
    if len(elem):
        if not elem.text or not elem.text.strip():
            elem.text = i + "  "
        if not elem.tail or not elem.tail.strip():
            elem.tail = i
        for elem in elem:
            indent(elem, level+1)
        if not elem.tail or not elem.tail.strip():
            elem.tail = i
    else:
        if level and (not elem.tail or not elem.tail.strip()):
            elem.tail = i

def parse_file(filename_in, filename_out):
    with open(filename_out, 'w') as fout:
        with open(filename_in, 'r') as fin:
            try:
                to_rm = []
                imdb_id = None
                tree = ET.parse(fin)
                root = tree.getroot()

                for node in root:
                    if node.tag not in ("title", "sorttitle", "set"):
                        if (node.tag == "id"):
                            imdb_id = node.text;
                        to_rm.append(node)

                for elem in to_rm:
                    root.remove(elem)

                indent(root)
                fout.write('<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>\n')
                tree.write(fout, "utf-8")
                fout.write('\nhttp://www.imdb.com/title/%s/' % imdb_id)
            except:
                print "Error while parsing %s" % filename_in

def main(av):
    if (len(av) < 2):
        print "Usage: python2 cleanup.py dir1 [dir2 [...]]"
    else:
        [fetch_files(arg) for arg in av if arg != __file__]
        print "You'll find the new files in %s" % gettempdir()

if __name__ == "__main__":
    main(sys.argv)
